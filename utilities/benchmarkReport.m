% Copyright (C) 2017-18 Leap Motion, Inc.
% 
%    Licensed under the Apache License, Version 2.0 (the "License");
%    you may not use this file except in compliance with the License.
%    You may obtain a copy of the License at
% 
%        http://www.apache.org/licenses/LICENSE-2.0
% 
%    Unless required by applicable law or agreed to in writing, software
%    distributed under the License is distributed on an "AS IS" BASIS,
%    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
%    See the License for the specific language governing permissions and
%    limitations under the License.
% Author: Eric Foxlin


% -------------------------------------------------------------------
% File: benchmarkReport
% Descr:  This script runs simVINS.slx model on all the vins_data files in
% a specified benchmarking directory, and saves the resulting figures to a
% word document, along with sum summary statistics.
% Created: 2018-03-02 Eric Foxlin
% -------------------------------------------------------------------


WordFileName=sprintf('VINS Benchmark Report %s.doc', date);
BenchDir= uigetdir(fullfile(pwd,'data\vinsdata\benchmark'));
FileSpec = fullfile(BenchDir,WordFileName);
delete(FileSpec);
[ActXWord,WordHandle]=StartWord(FileSpec);

fprintf('Document will be saved in %s\n',FileSpec);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%Section 1  Header
%%create document in word
Style='Title';
TextString= sprintf('VINS Benchmark Report %s', date);
WordText(ActXWord,TextString,Style,[0,2]);%two enters after text

Style='Normal';
TextString='This is an automatic report generated by a Matlab script looping through all vins_data*.txt files in the benchmark directory: ';
WordText(ActXWord,TextString,Style,[0,1]);%enter after text
WordText(ActXWord, BenchDir, Style, [0,1]);

TextString='The Results Graphs section contains plots of position and orientation comparing visual-inertial odometry (VIO) to pure visual odometry (VO). ';
WordText(ActXWord,TextString,Style,[0,0]);%no enter
TextString='Each trajectory ends back at the origin, so final position close to zero indicates low drift. ';
WordText(ActXWord,TextString,Style,[0,1]);%enter after text

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%Section 2  Table of Contents
style='Heading 4';
text='Table of Contents';
WordText(ActXWord,text,style,[1,1]);%enter before and after text
WordCreateTOC(ActXWord,1,3);
ActXWord.Selection.InsertBreak; %pagebreak


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%Section 3  Process the data files and generate figures

files = ls(fullfile(BenchDir, 'vins_data*.txt'));
nfiles = size(files,1);
figList = zeros(nfiles,1);
DataCellPosition = {'Filename', 'posErr_VIO(%)', 'posErr_VO(%)', 'VIO/VO ratio'; '', '', '', ''};
DataCellVertical = {'Filename', 'verticalErr_VIO(%)', 'verticalErr_VO(%)', 'VIO/VO ratio'; '', '', '', ''};
DataCellHeading = {'Filename', 'headingErr_VIO(rad)', 'headingErr_VO(rad)', 'VIO/VO ratio'; '', '', '', ''};
for ii = 1:nfiles
    filename = files(ii,:);
    disp(['copying ' filename]);
    copyfile(fullfile(BenchDir, filename), 'vins_data.txt');
    results = sim('simVINS','SimulationMode','normal', 'ReturnWorkspaceOutputs','on');
    simout = results.simout;
    
    plotPose;
    figList(ii) = gcf;

    posErr_VIO = norm(simout.r_nb.Data(:,end));  %why do these not subtract off init position?
    posErr_VO = norm(simout.r_VO.Data(:,end));
    vertErr_VIO = norm(simout.r_nb.Data(3,end));
    vertErr_VO = norm(simout.r_VO.Data(3,end));
    dist = simout.distTravelled.Data(end);
    init = find(simout.initialized.Data, 1, 'first');
    rollErr_VIO = abs(simout.eulers_rpy.Data(1,end) - simout.eulers_rpy.Data(1,init));
    rollErr_VO = abs(simout.eulers_VO.Data(1,end) - simout.eulers_VO.Data(1,init));
    pitchErr_VIO = abs(simout.eulers_rpy.Data(2,end) - simout.eulers_rpy.Data(2,init));
    pitchErr_VO = abs(simout.eulers_VO.Data(2,end) - simout.eulers_VO.Data(2,init));
    yawErr_VIO = abs(simout.eulers_rpy.Data(3,end) - simout.eulers_rpy.Data(3,init));
    yawErr_VO = abs(simout.eulers_VO.Data(3,end) - simout.eulers_VO.Data(3,init));
    
    DataCellPosition(ii+2,:) = {filename, num2str(posErr_VIO/dist*100), num2str(posErr_VO/dist*100), num2str(posErr_VIO/posErr_VO)};
    DataCellVertical(ii+2,:) = {filename, num2str(vertErr_VIO/dist*100), num2str(vertErr_VO/dist*100), num2str(vertErr_VIO/vertErr_VO)};
    DataCellHeading(ii+2,:) = {filename, num2str(yawErr_VIO), num2str(yawErr_VO), num2str(yawErr_VIO/yawErr_VO)};
end
% save the "raw" results to .mat file for future comparison:
save(fullfile(BenchDir, ['VINS_benchmark_data ' date]));

posErrs_VIO = [cellfun(@str2num, DataCellPosition(3:end,2))];
posErrs_VO = [cellfun(@str2num, DataCellPosition(3:end,3))];
vertErrs_VIO = [cellfun(@str2num, DataCellVertical(3:end,2))];
vertErrs_VO = [cellfun(@str2num, DataCellVertical(3:end,3))];
yawErrs_VIO = [cellfun(@str2num, DataCellHeading(3:end,2))];
yawErrs_VO = [cellfun(@str2num, DataCellHeading(3:end,3))];
% add a final row to the tables for averages:

DataCellPosition(ii+3,:) = {'', '', '', ''};
DataCellVertical(ii+3,:) = {'', '', '', ''};
DataCellHeading(ii+3,:) = {'', '', '', ''};

DataCellPosition(ii+4,:) = {'mean', num2str(mean(posErrs_VIO)), num2str(mean(posErrs_VO)), num2str(mean(posErrs_VIO)/mean(posErrs_VO))};
DataCellVertical(ii+4,:) = {'mean', num2str(mean(vertErrs_VIO)), num2str(mean(vertErrs_VO)), num2str(mean(vertErrs_VIO)/mean(vertErrs_VO))};
DataCellHeading(ii+4,:) = {'mean', num2str(mean(yawErrs_VIO)), num2str(mean(yawErrs_VO)), num2str(mean(yawErrs_VIO)/mean(yawErrs_VO))};

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%Section 4  Summary Tables
style='Heading 1';
text='Summary Tables';
WordText(ActXWord,text,style,[0,1]);%no enter before and after text

Style='Heading 2';
TextString='Loop Closing Final Position Errors (%distTravelled)';
WordText(ActXWord,TextString,Style,[0,1]);%enter after text

[NoRows,NoCols]=size(DataCellPosition);
%create table with data from DataCell
WordCreateTable(ActXWord,NoRows,NoCols,DataCellPosition,1);%enter before table
WordText(ActXWord,'',Style,[0,1]);%skip two lines


figure;  axis square; hold on;
lim= max([posErrs_VIO;posErrs_VO]); plot([0 lim+0.1], [0 lim+0.1], 'k'); % draw the parity line
plot(posErrs_VO,posErrs_VIO, '.');
xlabel('VO position error %'); ylabel('VIO position error %'); title('Position Drift Improvement (below parity line better)');
FigureIntoWord(ActXWord);

ActXWord.Selection.InsertBreak; %pagebreak

Style='Heading 2';
TextString='Loop Closing Final Vertical Errors (%distTravelled)';
WordText(ActXWord,TextString,Style,[0,1]);%enter after text

[NoRows,NoCols]=size(DataCellVertical);
%create table with data from DataCell
WordCreateTable(ActXWord,NoRows,NoCols,DataCellVertical,1);%enter before table
WordText(ActXWord,'',Style,[0,1]);%skip two lines

figure;  axis square; hold on;
lim= max([vertErrs_VIO;vertErrs_VO]); plot([0 lim+0.1], [0 lim+0.1], 'k'); % draw the parity line
plot(vertErrs_VO,vertErrs_VIO, '.');
xlabel('VO vertical error %'); ylabel('VIO vertical error %'); title('Vertical Drift Improvement (below parity line better)');
FigureIntoWord(ActXWord);

ActXWord.Selection.InsertBreak; %pagebreak

Style='Heading 2';
TextString='Loop Closing Final Heading Errors (radians)';
WordText(ActXWord,TextString,Style,[0,1]);%enter after text

[NoRows,NoCols]=size(DataCellHeading);
%create table with data from DataCell
WordCreateTable(ActXWord,NoRows,NoCols,DataCellHeading,1);%enter before table
WordText(ActXWord,'',Style,[0,1]);%skip two lines

figure;  axis square; hold on;
lim= max([yawErrs_VIO;yawErrs_VO]); plot([0 lim+0.1], [0 lim+0.1], 'k'); % draw the parity line
plot(yawErrs_VO,yawErrs_VIO, '.');
xlabel('VO heading error (rads)'); ylabel('VIO heading error (rads)'); title('Heading Drift Improvement (below parity line better)');
FigureIntoWord(ActXWord);

ActXWord.Selection.InsertBreak; %pagebreak


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%Section 5  Results Graphs
style='Heading 1';
text='Results Graphs';
WordText(ActXWord,text,style,[1,1]);%enter before and after text

for ii = 1:nfiles
    figure(figList(ii)); 
    FigureIntoWord(ActXWord);
end
 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%add pagenumbers (0=not on first page)
WordPageNumbers(ActXWord,'wdAlignPageNumberRight');
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%Last thing is to replace the Table of Contents so all headings are
%included.
%Selection.GoTo What:=wdGoToField, Which:=wdGoToPrevious, Count:=1, Name:= "TOC"
WordGoTo(ActXWord,7,3,1,'TOC',1);%%last 1 to delete the object
WordCreateTOC(ActXWord,1,3);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
CloseWord(ActXWord,WordHandle,FileSpec);
close all;
